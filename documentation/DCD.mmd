---
config:
  theme: dark
  look: classic
  layout: dagre
title: DCD
description: |
  This is the domain class diagram of the GettingReal application. It shows the main classes and their relationships.
  The diagram is divided into two namespaces: GettingReal.Model and GettingReal.Handler.
  The GettingReal.Model namespace contains the domain classes, while the GettingReal.Handler namespace contains the classes that handle the data.
  The diagram also shows the relationships between the classes, such as inheritance and composition.
  The diagram is generated using Mermaid syntax.
  The diagram is intended to be used as a reference for understanding the structure of the application.
  TODO ReportGenerator instead of string use xaml container.
---
classDiagram
direction TB
	namespace GettingReal.Model {
        class Workshop {
	        +Guid GUID
	        +string Name
            +List~Guid~ ActivityGuids
        }
        class Activity {
	        +Guid GUID
	        +string Name
	        +TimeSpand ExpectedTime
            +List~Guid~ MaterialGuids
        }
        class Material {
	        +Guid GUID
	        +string Name
	        +string Description
	        +int Amount
        }
        class Box {
	        +Guid GUID
	        +string Name
	        +string Description
            +List~Guid~ MaterialGuids
        }
        class BoxRepository {
        }
        class MaterialRepository {
        }
        class ActivityRepository {
        }
        class WorkshopRepository {
        }
        class Repository~T~ {
	        +-List~T~ Items
	        +Add(T) void
	        +GetAll() List
	        +Get(string) T
	        +Get(Guid) T
	        +Update(T) void
	        +Remove(T) void
	        -DoNameExist(string) bool
        }
        class IUidGenerateAble {
	        +GenerateUid() string
	        -DoGuidExist() bool
        }
	}
	namespace GettingReal.Handler {
        class XmlFileHandler {
	        +Save(IEnumerable~T~, string) :void
	        +Load(string) :void
        }
        class ReportGenerator {
            -List~int~ _col$
            -int _colCount$
            +ReportBoxesNeededForWorkshop(Workshop) :string$
            +ReportBoxInventory (Box) :string$
            +Print(string) :void$
        }
	}
    namespace GettingReal.ViewModel {
        class BoxViewModel {
            +Boxes : ObservableCollection~Box~
            +SelectedBox : Box
            +MaterialsInBox : ObservableCollection~Material~
            +AddBox(Box) : void
            +RemoveBox(Box) : void
        }
        class MaterialViewModel {
            +Materials : ObservableCollection~Material~
            +SelectedMaterial : Material
        }
        class ActivityViewModel {
            +Activities : ObservableCollection~Activity~
            +SelectedActivity : Activity
            +MaterialsInActivity : ObservableCollection~Material~
        }
        class WorkshopViewModel {
            +Workshops : ObservableCollection~Workshop~
            +SelectedWorkshop : Workshop
            +ActivitiesInWorkshop : ObservableCollection~Activity~
        }
    }


	<<Abstract>> Repository
	<<interface>> IUidGenerateAble

    Box "0..*" --* "1" BoxRepository : "have"
    BoxRepository ..|> Repository : "implement"
    Material "0..*" o-- "0..1" Box : "have"
    Material "0..*" --* "1" MaterialRepository : "have"
    MaterialRepository ..|> Repository : "implement"
    Activity "0..*" -- "0..1" Material : "have"
    Activity "0..*" --* "1" ActivityRepository : "have"
    ActivityRepository ..|> Repository : "implement"
    Workshop "0..*" -- "0..*" Activity : "have"
    Workshop "0..*" --* "1" WorkshopRepository : "have"
    WorkshopRepository ..|> Repository : "implement"
    Repository ..|> IUidGenerateAble : "implement"
    BoxRepository ..|> XmlFileHandler : "use"
    MaterialRepository ..|> XmlFileHandler : "use"
    ActivityRepository ..|> XmlFileHandler : "use"
    WorkshopRepository ..|> XmlFileHandler : "use"

    %% MVVM relationships
    BoxViewModel ..> BoxRepository : "uses"
    BoxViewModel ..> Box : "manages"
    BoxViewModel ..> Material : "manages"
    MaterialViewModel ..> MaterialRepository : "uses"
    MaterialViewModel ..> Material : "manages"
    ActivityViewModel ..> ActivityRepository : "uses"
    ActivityViewModel ..> Activity : "manages"
    ActivityViewModel ..> Material : "manages"
    WorkshopViewModel ..> WorkshopRepository : "uses"
    WorkshopViewModel ..> Workshop : "manages"
    WorkshopViewModel ..> Activity : "manages"